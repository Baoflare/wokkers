/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { EmptyObject as common$$emptyObject } from "../../../../common/types/EmptyObject";
import { CdnNamespaceDomainVerificationMethodHttp as cloud_common$$cdnNamespaceDomainVerificationMethodHttp } from "./CdnNamespaceDomainVerificationMethodHttp";
import { common, cloud } from "../../../../index";

export const CdnNamespaceDomainVerificationMethod: core.serialization.ObjectSchema<
    serializers.cloud.CdnNamespaceDomainVerificationMethod.Raw,
    Rivet.cloud.CdnNamespaceDomainVerificationMethod
> = core.serialization.object({
    invalid: common$$emptyObject.optional(),
    http: cloud_common$$cdnNamespaceDomainVerificationMethodHttp.optional(),
});

export declare namespace CdnNamespaceDomainVerificationMethod {
    interface Raw {
        invalid?: common.EmptyObject.Raw | null;
        http?: cloud.CdnNamespaceDomainVerificationMethodHttp.Raw | null;
    }
}
