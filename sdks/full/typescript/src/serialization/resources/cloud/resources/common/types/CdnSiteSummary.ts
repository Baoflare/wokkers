/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { DisplayName as common$$displayName } from "../../../../common/types/DisplayName";
import { Timestamp as common$$timestamp } from "../../../../common/types/Timestamp";
import { common } from "../../../../index";

export const CdnSiteSummary: core.serialization.ObjectSchema<
    serializers.cloud.CdnSiteSummary.Raw,
    Rivet.cloud.CdnSiteSummary
> = core.serialization.object({
    siteId: core.serialization.property("site_id", core.serialization.string()),
    uploadId: core.serialization.property("upload_id", core.serialization.string()),
    displayName: core.serialization.property("display_name", common$$displayName),
    createTs: core.serialization.property("create_ts", common$$timestamp),
    contentLength: core.serialization.property("content_length", core.serialization.number()),
    complete: core.serialization.boolean(),
});

export declare namespace CdnSiteSummary {
    interface Raw {
        site_id: string;
        upload_id: string;
        display_name: common.DisplayName.Raw;
        create_ts: common.Timestamp.Raw;
        content_length: number;
        complete: boolean;
    }
}
