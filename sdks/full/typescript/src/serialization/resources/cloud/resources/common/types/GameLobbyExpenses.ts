/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { Handle as game_common$$handle } from "../../../../game/resources/common/types/Handle";
import { NamespaceSummary as cloud_common$$namespaceSummary } from "./NamespaceSummary";
import { RegionTierExpenses as cloud_common$$regionTierExpenses } from "./RegionTierExpenses";
import { game, cloud } from "../../../../index";

export const GameLobbyExpenses: core.serialization.ObjectSchema<
    serializers.cloud.GameLobbyExpenses.Raw,
    Rivet.cloud.GameLobbyExpenses
> = core.serialization.object({
    game: game_common$$handle,
    namespaces: core.serialization.list(cloud_common$$namespaceSummary),
    expenses: core.serialization.list(cloud_common$$regionTierExpenses),
});

export declare namespace GameLobbyExpenses {
    interface Raw {
        game: game.Handle.Raw;
        namespaces: cloud.NamespaceSummary.Raw[];
        expenses: cloud.RegionTierExpenses.Raw[];
    }
}
