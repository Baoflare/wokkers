/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { Timestamp as common$$timestamp } from "../../../../common/types/Timestamp";
import { LogsLobbyStatus as cloud_common$$logsLobbyStatus } from "./LogsLobbyStatus";
import { common, cloud } from "../../../../index";

export const LogsLobbySummary: core.serialization.ObjectSchema<
    serializers.cloud.LogsLobbySummary.Raw,
    Rivet.cloud.LogsLobbySummary
> = core.serialization.object({
    lobbyId: core.serialization.property("lobby_id", core.serialization.string()),
    namespaceId: core.serialization.property("namespace_id", core.serialization.string()),
    lobbyGroupNameId: core.serialization.property("lobby_group_name_id", core.serialization.string()),
    regionId: core.serialization.property("region_id", core.serialization.string()),
    createTs: core.serialization.property("create_ts", common$$timestamp),
    startTs: core.serialization.property("start_ts", common$$timestamp.optional()),
    readyTs: core.serialization.property("ready_ts", common$$timestamp.optional()),
    status: cloud_common$$logsLobbyStatus,
});

export declare namespace LogsLobbySummary {
    interface Raw {
        lobby_id: string;
        namespace_id: string;
        lobby_group_name_id: string;
        region_id: string;
        create_ts: common.Timestamp.Raw;
        start_ts?: common.Timestamp.Raw | null;
        ready_ts?: common.Timestamp.Raw | null;
        status: cloud.LogsLobbyStatus.Raw;
    }
}
