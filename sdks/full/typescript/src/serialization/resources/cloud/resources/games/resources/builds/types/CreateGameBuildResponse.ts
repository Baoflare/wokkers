/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as Rivet from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { PresignedRequest as upload_common$$presignedRequest } from "../../../../../../upload/resources/common/types/PresignedRequest";
import { upload } from "../../../../../../index";

export const CreateGameBuildResponse: core.serialization.ObjectSchema<
    serializers.cloud.games.CreateGameBuildResponse.Raw,
    Rivet.cloud.games.CreateGameBuildResponse
> = core.serialization.object({
    buildId: core.serialization.property("build_id", core.serialization.string()),
    uploadId: core.serialization.property("upload_id", core.serialization.string()),
    imagePresignedRequest: core.serialization.property(
        "image_presigned_request",
        upload_common$$presignedRequest.optional()
    ),
    imagePresignedRequests: core.serialization.property(
        "image_presigned_requests",
        core.serialization.list(upload_common$$presignedRequest).optional()
    ),
});

export declare namespace CreateGameBuildResponse {
    interface Raw {
        build_id: string;
        upload_id: string;
        image_presigned_request?: upload.PresignedRequest.Raw | null;
        image_presigned_requests?: upload.PresignedRequest.Raw[] | null;
    }
}
