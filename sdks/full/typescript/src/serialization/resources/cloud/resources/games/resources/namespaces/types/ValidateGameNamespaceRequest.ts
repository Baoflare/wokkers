/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as Rivet from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { DisplayName as common$$displayName } from "../../../../../../common/types/DisplayName";
import { common } from "../../../../../../index";

export const ValidateGameNamespaceRequest: core.serialization.ObjectSchema<
    serializers.cloud.games.namespaces.ValidateGameNamespaceRequest.Raw,
    Rivet.cloud.games.namespaces.ValidateGameNamespaceRequest
> = core.serialization.object({
    displayName: core.serialization.property("display_name", common$$displayName),
    nameId: core.serialization.property("name_id", core.serialization.string()),
});

export declare namespace ValidateGameNamespaceRequest {
    interface Raw {
        display_name: common.DisplayName.Raw;
        name_id: string;
    }
}
