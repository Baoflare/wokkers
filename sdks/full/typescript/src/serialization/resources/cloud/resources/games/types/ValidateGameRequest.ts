/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Rivet from "../../../../../../api";
import * as core from "../../../../../../core";

export const ValidateGameRequest: core.serialization.ObjectSchema<
    serializers.cloud.games.ValidateGameRequest.Raw,
    Rivet.cloud.games.ValidateGameRequest
> = core.serialization.object({
    displayName: core.serialization.property(
        "display_name",
        core.serialization.lazy(async () => (await import("../../../../..")).DisplayName)
    ),
    nameId: core.serialization.property(
        "name_id",
        core.serialization.lazy(async () => (await import("../../../../..")).Identifier).optional()
    ),
});

export declare namespace ValidateGameRequest {
    interface Raw {
        display_name: serializers.DisplayName.Raw;
        name_id?: serializers.Identifier.Raw | null;
    }
}
