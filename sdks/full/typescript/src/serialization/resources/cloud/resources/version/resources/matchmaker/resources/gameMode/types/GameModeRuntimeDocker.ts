/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../../../index";
import * as Rivet from "../../../../../../../../../../api/index";
import * as core from "../../../../../../../../../../core";
import { NetworkMode as cloud_version_matchmaker_common$$networkMode } from "../../common/types/NetworkMode";
import { GameModeRuntimeDockerPort as cloud_version_matchmaker_game_mode$$gameModeRuntimeDockerPort } from "./GameModeRuntimeDockerPort";
import { cloud } from "../../../../../../../../index";

export const GameModeRuntimeDocker: core.serialization.ObjectSchema<
    serializers.cloud.version.matchmaker.GameModeRuntimeDocker.Raw,
    Rivet.cloud.version.matchmaker.GameModeRuntimeDocker
> = core.serialization.object({
    dockerfile: core.serialization.string().optional(),
    buildArgs: core.serialization.property(
        "build_args",
        core.serialization.record(core.serialization.string(), core.serialization.string()).optional()
    ),
    image: core.serialization.string().optional(),
    imageId: core.serialization.property("image_id", core.serialization.string().optional()),
    args: core.serialization.list(core.serialization.string()).optional(),
    env: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
    networkMode: core.serialization.property("network_mode", cloud_version_matchmaker_common$$networkMode.optional()),
    ports: core.serialization
        .record(core.serialization.string(), cloud_version_matchmaker_game_mode$$gameModeRuntimeDockerPort)
        .optional(),
});

export declare namespace GameModeRuntimeDocker {
    interface Raw {
        dockerfile?: string | null;
        build_args?: Record<string, string> | null;
        image?: string | null;
        image_id?: string | null;
        args?: string[] | null;
        env?: Record<string, string> | null;
        network_mode?: cloud.version.matchmaker.NetworkMode.Raw | null;
        ports?: Record<string, cloud.version.matchmaker.GameModeRuntimeDockerPort.Raw> | null;
    }
}
