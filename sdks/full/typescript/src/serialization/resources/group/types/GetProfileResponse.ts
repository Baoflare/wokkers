/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Rivet from "../../../../api/index";
import * as core from "../../../../core";
import { Profile as group_common$$profile } from "../resources/common/types/Profile";
import { WatchResponse as common$$watchResponse } from "../../common/types/WatchResponse";
import { group, common } from "../../index";

export const GetProfileResponse: core.serialization.ObjectSchema<
    serializers.group.GetProfileResponse.Raw,
    Rivet.group.GetProfileResponse
> = core.serialization.object({
    group: group_common$$profile,
    watch: common$$watchResponse,
});

export declare namespace GetProfileResponse {
    interface Raw {
        group: group.Profile.Raw;
        watch: common.WatchResponse.Raw;
    }
}
