/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Rivet from "../../../../api";
import * as core from "../../../../core";

export const ValidateProfileRequest: core.serialization.ObjectSchema<
    serializers.group.ValidateProfileRequest.Raw,
    Rivet.group.ValidateProfileRequest
> = core.serialization.object({
    displayName: core.serialization.property(
        "display_name",
        core.serialization.lazy(async () => (await import("../../..")).DisplayName).optional()
    ),
    bio: core.serialization.lazy(async () => (await import("../../..")).DisplayName).optional(),
    publicity: core.serialization.lazy(async () => (await import("../../..")).group.Publicity).optional(),
});

export declare namespace ValidateProfileRequest {
    interface Raw {
        display_name?: serializers.DisplayName.Raw | null;
        bio?: serializers.DisplayName.Raw | null;
        publicity?: serializers.group.Publicity.Raw | null;
    }
}
