/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { Jwt as common$$jwt } from "../../../../common/types/Jwt";
import { Timestamp as common$$timestamp } from "../../../../common/types/Timestamp";
import { Profile as identity_common$$profile } from "../../common/types/Profile";
import { common, identity } from "../../../../index";

export const GetGameLinkNewIdentity: core.serialization.ObjectSchema<
    serializers.identity.GetGameLinkNewIdentity.Raw,
    Rivet.identity.GetGameLinkNewIdentity
> = core.serialization.object({
    identityToken: core.serialization.property("identity_token", common$$jwt),
    identityTokenExpireTs: core.serialization.property("identity_token_expire_ts", common$$timestamp),
    identity: identity_common$$profile,
});

export declare namespace GetGameLinkNewIdentity {
    interface Raw {
        identity_token: common.Jwt.Raw;
        identity_token_expire_ts: common.Timestamp.Raw;
        identity: identity.Profile.Raw;
    }
}
