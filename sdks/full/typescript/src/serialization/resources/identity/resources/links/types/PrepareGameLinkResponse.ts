/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { Timestamp as common$$timestamp } from "../../../../common/types/Timestamp";
import { common } from "../../../../index";

export const PrepareGameLinkResponse: core.serialization.ObjectSchema<
    serializers.identity.PrepareGameLinkResponse.Raw,
    Rivet.identity.PrepareGameLinkResponse
> = core.serialization.object({
    identityLinkToken: core.serialization.property("identity_link_token", core.serialization.string()),
    identityLinkUrl: core.serialization.property("identity_link_url", core.serialization.string()),
    expireTs: core.serialization.property("expire_ts", common$$timestamp),
});

export declare namespace PrepareGameLinkResponse {
    interface Raw {
        identity_link_token: string;
        identity_link_url: string;
        expire_ts: common.Timestamp.Raw;
    }
}
