/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { Key as kv_common$$key } from "./Key";
import { Value as kv_common$$value } from "./Value";
import { kv } from "../../../../index";

export const Entry: core.serialization.ObjectSchema<serializers.kv.Entry.Raw, Rivet.kv.Entry> =
    core.serialization.object({
        key: kv_common$$key,
        value: kv_common$$value,
        deleted: core.serialization.boolean().optional(),
    });

export declare namespace Entry {
    interface Raw {
        key: kv.Key.Raw;
        value?: kv.Value.Raw;
        deleted?: boolean | null;
    }
}
