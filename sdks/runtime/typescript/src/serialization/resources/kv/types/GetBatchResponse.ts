/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Rivet from "../../../../api/index";
import * as core from "../../../../core";
import { Entry as kv_common$$entry } from "../resources/common/types/Entry";
import { WatchResponse as common$$watchResponse } from "../../common/types/WatchResponse";
import { kv, common } from "../../index";

export const GetBatchResponse: core.serialization.ObjectSchema<
    serializers.kv.GetBatchResponse.Raw,
    Rivet.kv.GetBatchResponse
> = core.serialization.object({
    entries: core.serialization.list(kv_common$$entry),
    watch: common$$watchResponse,
});

export declare namespace GetBatchResponse {
    interface Raw {
        entries: kv.Entry.Raw[];
        watch: common.WatchResponse.Raw;
    }
}
