/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { GameModeInfo as matchmaker_common$$gameModeInfo } from "../../common/types/GameModeInfo";
import { RegionInfo as matchmaker_common$$regionInfo } from "../../common/types/RegionInfo";
import { LobbyInfo as matchmaker_common$$lobbyInfo } from "../../common/types/LobbyInfo";
import { matchmaker } from "../../../../index";

export const ListLobbiesResponse: core.serialization.ObjectSchema<
    serializers.matchmaker.ListLobbiesResponse.Raw,
    Rivet.matchmaker.ListLobbiesResponse
> = core.serialization.object({
    gameModes: core.serialization.property("game_modes", core.serialization.list(matchmaker_common$$gameModeInfo)),
    regions: core.serialization.list(matchmaker_common$$regionInfo),
    lobbies: core.serialization.list(matchmaker_common$$lobbyInfo),
});

export declare namespace ListLobbiesResponse {
    interface Raw {
        game_modes: matchmaker.GameModeInfo.Raw[];
        regions: matchmaker.RegionInfo.Raw[];
        lobbies: matchmaker.LobbyInfo.Raw[];
    }
}
