syntax = "proto3";

package rivet.backend.pkg.dynamic_servers.server_create;

import "proto/common.proto";
import "proto/backend/ds.proto";

message Request {
    rivet.common.Uuid game_id = 1;
    rivet.common.Uuid datacenter_id = 2;
    rivet.common.Uuid cluster_id = 3;
    map<string, string> tags = 5;
    rivet.backend.ds.ServerResources resources = 6;
    int64 kill_timeout_ms = 7;
    optional string webhook_url = 8;
    rivet.common.Uuid image_id = 9;
    repeated string args = 10;
    rivet.backend.ds.NetworkMode network_mode = 11;
    map<string, string> environment = 12;
    map<string, Port> network_ports = 13;
}

message Response {
    rivet.backend.ds.Server server = 1;
}

message Port {
    // Null when using host networking since one is automatially assigned
    optional int32 internal_port = 1;

    oneof routing {
        rivet.backend.ds.GameGuardRouting game_guard = 101;
        rivet.backend.ds.HostRouting host = 102;
    }
}

